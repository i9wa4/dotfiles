#!/bin/bash
set -o errexit
set -o nounset
set -o pipefail
set -o posix

THEME_DIR="$HOME/.config/alacritty/themes/themes"
THEME_FILE="$HOME/.config/alacritty/theme.toml"
CACHE_FILE="${XDG_CACHE_HOME:-$HOME/.cache}/terminal-theme"

# キャッシュファイルからテーマタイプを取得
if [[ -f $CACHE_FILE ]]; then
  THEME_TYPE=$(cat "$CACHE_FILE" | tr -d ' \n')
else
  THEME_TYPE="dark"
fi

# light または dark 以外の場合はデフォルト
if [[ $THEME_TYPE != "light" && $THEME_TYPE != "dark" ]]; then
  THEME_TYPE="dark"
fi

CACHE_LIST_FILE="/tmp/alacritty-themes-${THEME_TYPE}.cache"

# 背景色から明るさを判定する関数
is_matching_theme() {
  local theme_file="$1"
  local target_type="$2"

  # background の色を取得
  local bg_color=$(grep -E "^\s*background\s*=" "$theme_file" | head -1 | sed -E "s/.*['\"]?(#[0-9a-fA-F]{6})['\"]?.*/\1/")

  if [[ -z $bg_color ]]; then
    # 判定できない場合はダークとみなす
    [[ $target_type == "dark" ]]
    return $?
  fi

  # RGB値を抽出
  local r=$((16#${bg_color:1:2}))
  local g=$((16#${bg_color:3:2}))
  local b=$((16#${bg_color:5:2}))

  # 輝度を計算 (0.299*R + 0.587*G + 0.114*B)
  local brightness=$(echo "scale=2; 0.299*$r + 0.587*$g + 0.114*$b" | bc)

  # 128を境界値として判定
  if [[ $target_type == "light" ]]; then
    (($(echo "$brightness >= 128" | bc -l)))
  else
    (($(echo "$brightness < 128" | bc -l)))
  fi
}

# キャッシュがあればそれを使用、なければ生成
if [[ -f $CACHE_LIST_FILE ]]; then
  themes=()
  while IFS= read -r line; do
    themes+=("$line")
  done <"$CACHE_LIST_FILE"
else
  # テーマタイプに一致するテーマのリストを作成
  themes=()
  for theme_file in "$THEME_DIR"/*.toml; do
    if is_matching_theme "$theme_file" "$THEME_TYPE"; then
      themes+=("$(basename "$theme_file")")
    fi
  done

  # アルファベット順にソート
  IFS=$'\n' themes=($(sort <<<"${themes[*]}"))
  unset IFS

  # キャッシュに保存
  if [[ ${#themes[@]} -gt 0 ]]; then
    printf "%s\n" "${themes[@]}" >"$CACHE_LIST_FILE"
  fi
fi

if [[ ${#themes[@]} -eq 0 ]]; then
  echo "Error: No ${THEME_TYPE} themes found" >&2
  exit 1
fi

# ランダムにテーマを選択
next_theme="${themes[RANDOM % ${#themes[@]}]}"

# theme.toml を更新
cat >"$THEME_FILE" <<EOF
[general]
import = [
    '$THEME_DIR/$next_theme'
]
EOF

# キャッシュファイルに書き込み (既にあるはずだが念のため)
mkdir -p "$(dirname "$CACHE_FILE")"
echo "$THEME_TYPE" >"$CACHE_FILE"

# Alacritty の設定リロードをトリガー
touch "$HOME/.config/alacritty/alacritty.toml"

# tmux のステータスバーを更新
if command -v tmux &>/dev/null && tmux list-sessions &>/dev/null; then
  tmux refresh-client -S
fi

# echo "Switched to ${THEME_TYPE} theme: ${next_theme}"
