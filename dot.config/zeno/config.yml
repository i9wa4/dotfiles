options:
  snippetDefaultBehavior: "strict"

snippets:
  - name: ll
    keyword: ll
    snippet:
      ls -aFlv
  - name: ls for macOS
    keyword: llm
    snippet:
      ls -aFlv --color=always -D "%Y-%m-%d %H:%M:%S" -h
  - name: ls for Ubuntu
    keyword: llu
    snippet:
      ls -aFlv --color=always --time-style=long-iso -h
  - name: path
    keyword: path
    snippet:
      echo "${PATH}" | sed "s/\:/\n/g"
  - name: update
    keyword: up
    # zinit delete -y i9wa4/zeno.zsh && zinit load i9wa4/zeno.zsh
    snippet:
      cd ~/ghq/github.com/i9wa4/dotfiles
      && make unlink
      && ghq list | ghq get --update --parallel
      && make link
      && zinit self-update
      && zinit update --parallel
      && make package-update
      && make common-clean
      && cd ~/ghq/github.com/i9wa4/internal
      && uv run quarto render docs/
      && cd -
      && ghq-repo-status
  - name: (Alacritty) Dark Random
    keyword: ad
    snippet:
      bash ~/.config/alacritty/alacritty-theme-dark.sh
  - name: (Alacritty) Light Random
    keyword: al
    snippet:
      bash ~/.config/alacritty/alacritty-theme-light.sh
  - name: (Claude Code) yolo
    keyword: y
    snippet:
      --dangerously-skip-permissions
    context:
      lbuffer: '^claude\s'
  - name: (Codex CLI) start
    keyword: cs
    snippet:
      bash ~/.codex/generate-config.sh && codex
  - name: (Codex CLI) yolo
    keyword: y
    snippet:
      --yolo
    context:
      lbuffer: 'codex\s'
  - name: (Dev Container CLI) build
    keyword: dcb
    snippet:
      devcontainer build --workspace-folder .
  - name: (Dev Container CLI) up
    keyword: dcu
    snippet:
      devcontainer up --workspace-folder .
  - name: (Dev Container CLI) exec Claude Code
    keyword: dcc
    snippet:
      devcontainer exec --workspace-folder . claude --dangerously-skip-permissions
  - name: (Docker) remove all containers
    keyword: rm
    snippet:
      rm -f $(docker ps -aq)
    context:
      lbuffer: '^docker\s'
  - name: (Docker) remove all images
    keyword: rmi
    snippet:
      rmi -f $(docker images -aq)
    context:
      lbuffer: '^docker\s'
  - name: (Docker) stop all containers
    keyword: s
    snippet:
      stop $(docker ps -aq)
    context:
      lbuffer: '^docker\s'
  - name: (Docker) df
    keyword: df
    snippet:
      system df
    context:
      lbuffer: '^docker\s'
  - name: (ghq) update
    keyword: gu
    snippet:
      ghq list | ghq get --update --parallel
  - name: (Git) delete merged branches
    keyword: db
    snippet:
      switch main && git fetch --prune && git branch --merged main | grep -v -E '^\*|^\s*main$|^\s*master$' | xargs -n 1 git branch -d 2>/dev/null || true
    context:
      lbuffer: '^git\s'
  - name: (Git) graph
    keyword: lo
    snippet:
      log --graph --format='%C(auto)%h%C(auto)%d %C(auto)%s%n%C(brightblack)[%ai] %C(green)<%an> %C(brightblack)<%ae>' --name-status
    context:
      lbuffer: '^git\s'
  - name: (Git) graph --all
    keyword: la
    snippet:
      log --graph --format='%C(auto)%h%C(auto)%d %C(auto)%s%n%C(brightblack)[%ai] %C(green)<%an> %C(brightblack)<%ae>' --name-status --all
    context:
      lbuffer: '^git\s'
  - name: (Git) worktree remove
    keyword: dw
    snippet:
      worktree remove . && cd -
    context:
      lbuffer: '^git\s'
  - name: (Prompt) toggle
    keyword: pt
    snippet:
      if [ -n "${_PROMPT_SAVE}" ]; then
        PROMPT="${_PROMPT_SAVE}";
        unset _PROMPT_SAVE;
      else
        export _PROMPT_SAVE="${PROMPT}";
        PROMPT=$'\n'"%F{#696969}$%f ";
      fi
  - name: (Quarto) preview
    keyword: qp
    snippet:
      uv run quarto preview
  - name: (Quarto) render
    keyword: qr
    snippet:
      uv run quarto render
  - name: (uv) activate
    keyword: ua
    snippet:
      . ~/ghq/github.com/i9wa4/dotfiles/.venv{{}}/bin/activate
  - name: (uv) upgrade
    keyword: uu
    snippet:
      uv lock --upgrade
      && uv sync --frozen --all-extras
