[[plugins]]
repo = 'github/copilot.vim'
on_event = ['VimEnter']

[[plugins]]
repo = 'tyru/caw.vim'
on_event = ['VimEnter']

[[plugins]]
repo = 'monaqa/dps-dial.vim'
depends = ['denops.vim']
on_event = ['BufEnter']
hook_source = '''
nmap <C-a>  <Plug>(dps-dial-increment)
nmap <C-x>  <Plug>(dps-dial-decrement)
xmap <C-a>  <Plug>(dps-dial-increment)
xmap <C-x>  <Plug>(dps-dial-decrement)
xmap g<C-a> g<Plug>(dps-dial-increment)
xmap g<C-x> g<Plug>(dps-dial-decrement)
'''

[[plugins]]
repo = 'lambdalisue/vim-gin'
depends = ['denops.vim']
on_event = ['BufEnter']
hook_source = '''
let g:gin_proxy_apply_without_confirm = v:true

function! s:my_gin_log() abort
  let g:gin_log_default_args = [
  \   "--graph",
  \   "--format='%C(auto)%h%C(auto)%d %C(auto)%s%n        %C(brightblack)[%ai] %C(green)<%an> %C(brightblack)<%ae>'"
  \ ]
  execute 'GinLog'
  let g:gin_log_default_args = []
endfunction

function! s:my_gin_log_all() abort
  let g:gin_log_default_args = [
  \   "--graph",
  \   "--all",
  \   "--format='%C(auto)%h%C(auto)%d %C(auto)%s%n        %C(brightblack)[%ai] %C(green)<%an> %C(brightblack)<%ae>'"
  \ ]
  execute 'GinLog'
  let g:gin_log_default_args = []
endfunction

nnoremap <Plug>(my-Gin) <Nop>
nmap <Space>g <Plug>(my-Gin)
nnoremap <Plug>(my-Gin)aa <Cmd>execute 'Gin add -A'<CR>
nnoremap <Plug>(my-Gin)au <Cmd>execute 'Gin add -u'<CR>
nnoremap <Plug>(my-Gin)c  <Cmd>execute 'Gin commit'<CR>
nnoremap <Plug>(my-Gin)d  <Cmd>execute 'GinDiff'<CR>
nnoremap <Plug>(my-Gin)la <Cmd>call <SID>my_gin_log_all()<CR>
nnoremap <Plug>(my-Gin)lo <Cmd>call <SID>my_gin_log()<CR>
nnoremap <Plug>(my-Gin)p  <Cmd>execute 'Gin push'<CR>
nnoremap <Plug>(my-Gin)s  <Cmd>execute 'GinStatus'<CR>
'''

[[plugins]]
repo = 'i9wa4/vim-get-git-branch-name'
on_event = ['BufEnter']
hook_source = '''
function! MyStatuslineRightTabline() abort
  let l:name = branch_name#get_current_repo_root_name()
  let l:branch = branch_name#get_current_branch_name()

  let l:ret = ''
  if !empty(l:name)
    let l:ret ..= l:name
  endif
  if !empty(l:branch)
    let l:ret ..= ' ' .. '(' .. l:branch .. ')'
  endif
  return l:ret
endfunction
'''

# --------------------------------------
# Markdown
#
[[plugins]]
repo = 'junegunn/vim-easy-align'
on_ft = ['markdown', 'quarto', 'rmd']
hook_source = '''
augroup MyEasyAlign
  autocmd!
  autocmd FileType markdown,quarto,rmd vmap <Space><Space> :EasyAlign*<Bar><Enter>
augroup END
'''

[[plugins]]
repo = 'i9wa4/vim-markdown-number-header'
depends = ['denops.vim']
on_ft = ['markdown', 'quarto', 'rmd']
hook_source = '''
let g:mnh_header_level_shift = 1
augroup mnh
  autocmd!
  autocmd BufWritePost *.md,*.rmd,*.qmd execute 'NumberHeader'
augroup END
'''

# --------------------------------------
# Terraform
#
[[plugins]]
repo = 'hashivim/vim-terraform'
on_ft = ['terraform', 'terraform-vars', 'tf']

# --------------------------------------
# dbt
#
[[plugins]]
repo = 'i9wa4/vim-dbt-jump2def'
depends = ['denops.vim']
# on_ft = ['sql']
on_event = ['BufEnter']
hook_source = '''
nnoremap <Space>dj <Cmd>execute 'DbtJump2ModelDef'<CR>
'''
