#!/usr/bin/env bash
set -o errexit
set -o nounset
set -o pipefail
set -o posix

# 引数チェック
pr_number="${1:-}"

if [[ -z $pr_number || ! $pr_number =~ ^[0-9]+$ ]]; then
  echo "Usage: $0 <pr_number>" >&2
  echo "Example: $0 123" >&2
  exit 1
fi

# gh コマンドの存在確認
if ! command -v gh &>/dev/null; then
  echo "Error: gh コマンドが見つかりません。GitHub CLI をインストールしてください。" >&2
  exit 1
fi

# PR情報を取得してブランチ名を抽出
echo "→ PR #${pr_number} の情報を取得中..."
pr_branch=$(gh pr view "${pr_number}" --json headRefName --jq '.headRefName' 2>/dev/null)

if [[ -z $pr_branch ]]; then
  echo "Error: PR #${pr_number} のブランチ名を取得できませんでした" >&2
  echo "PR が存在するか、アクセス権限があるか確認してください。" >&2
  exit 1
fi

echo "✓ PR #${pr_number} のブランチ: ${pr_branch}"

# 基本設定
repo_name=$(basename "$(git rev-parse --show-toplevel)")
worktree_path="$(dirname "$(pwd)")/${repo_name}-pr-${pr_number}"

# 既存worktreeチェック
if [[ -d $worktree_path ]]; then
  echo "✓ 既存のworktreeに移動: ${worktree_path}"
  cd "$worktree_path"
else
  # リモート情報取得
  echo "→ リモート情報を取得中..."
  git fetch origin

  # worktree作成
  if git show-ref --verify --quiet "refs/remotes/origin/${pr_branch}"; then
    echo "→ worktreeを作成中..."
    git worktree add "$worktree_path" "origin/${pr_branch}"
    cd "$worktree_path"
    git checkout -b "${pr_branch}" "origin/${pr_branch}"
  else
    echo "Error: リモートブランチ 'origin/${pr_branch}' が見つかりません" >&2
    exit 1
  fi

  echo "✓ worktreeを作成: ${worktree_path}"
fi

# repo-setup を実行
echo ""
echo "→ repo-setup を実行中..."
if command -v repo-setup &>/dev/null; then
  repo-setup
else
  echo "Warning: repo-setup コマンドが見つかりません。手動でセットアップしてください。"
fi

echo ""
echo "✓ PR レビュー環境の準備完了"
echo "✓ worktree: ${worktree_path}"
echo "✓ ブランチ: $(git branch --show-current)"
echo ""
echo "レビュー終了時は以下を実行:"
echo "  pr-review-end ${pr_number}"
